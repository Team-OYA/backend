<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oya.kr.popup.mapper.PlanMapper">

    <select id="findById" parameterType="long" resultType="planMapperResponse">
        SELECT ID, OFFICE, FLOOR, LOCATION, OPEN_DATE, CLOSE_DATE, BUSINESS_PLAN_URL, ENTRANCE_STATUS,
               CONTACT_INFORMATION, CATEGORY, USER_ID
        FROM PLAN
        WHERE ID = #{id} AND DELETED = 0
    </select>

    <select id="findAllWithoutPopup" resultType="planMapperResponse">
        SELECT ID, OFFICE, FLOOR, LOCATION, OPEN_DATE, CLOSE_DATE, BUSINESS_PLAN_URL, ENTRANCE_STATUS,
               CONTACT_INFORMATION, CATEGORY, USER_ID
        FROM PLAN
        WHERE ID NOT IN (
            SELECT PLAN_ID
            FROM POPUP
        )
    </select>

    <select id="findAllAboutMe" parameterType="planAboutMeMapperRequest" resultType="planAboutMeMapperResponse">
        SELECT P.ID, OFFICE, FLOOR, OPEN_DATE, CLOSE_DATE, ENTRANCE_STATUS, CATEGORY, P.CREATED_DATE,
               NVL2(PU.ID, 1, 0) WRITTEN_POPUP
        FROM PLAN P
            LEFT JOIN POPUP PU
                ON P.ID = PU.PLAN_ID
                    AND PU.DELETED = 0
        WHERE P.USER_ID = #{userId}
            AND P.CATEGORY LIKE '%'||#{category}||'%'
            AND P.ENTRANCE_STATUS LIKE '%'||#{entranceStatus}||'%'
        ORDER BY P.CREATED_DATE DESC
        <include refid="offsetForPaging" />
    </select>

    <select id="findAll" parameterType="allPlanMapperRequest" resultType="allPlanMapperResponse">
        SELECT P.ID, OFFICE, FLOOR, OPEN_DATE, CLOSE_DATE, ENTRANCE_STATUS, CATEGORY, P.CREATED_DATE,
            NVL2(PU.ID, 1, 0) WRITTEN_POPUP,
            B.NAME_OF_COMPANY COMPANY_NAME
        FROM PLAN P
            LEFT JOIN POPUP PU
                ON P.ID = PU.PLAN_ID
                    AND PU.DELETED = 0
        JOIN USERS U
            ON P.USER_ID = U.ID
                AND U.DELETED = 0
        LEFT JOIN BUSINESS B
            ON U.ID = B.USER_ID
                AND B.DELETED = 0
        WHERE P.CATEGORY LIKE '%'||#{category}||'%'
            AND P.ENTRANCE_STATUS LIKE '%'||#{entranceStatus}||'%'
        ORDER BY P.CREATED_DATE DESC
        <include refid="offsetForPaging"/>
    </select>

    <select id="statistics" parameterType="Long" resultType="statisticsPlanMapperResponse">
        SELECT
            COUNT(*) TOTAL,
            SUM(CASE WHEN ENTRANCE_STATUS = 'request' THEN 1 ELSE 0 END) REQUEST,
            SUM(CASE WHEN ENTRANCE_STATUS = 'waiting' THEN 1 ELSE 0 END) WAITING,
            SUM(CASE WHEN ENTRANCE_STATUS = 'approval' THEN 1 ELSE 0 END) APPROVAL,
            SUM(CASE WHEN ENTRANCE_STATUS = 'rejection' THEN 1 ELSE 0 END) REJECTION,
            SUM(CASE WHEN ENTRANCE_STATUS = 'withdrawal' THEN 1 ELSE 0 END) WITHDRAWAL
        FROM PLAN
        WHERE USER_ID = #{userId} AND DELETED = 0
    </select>

    <select id="countAboutMe" parameterType="planAboutMeMapperRequest">
        SELECT COUNT(*) count
        FROM PLAN
        WHERE USER_Id = #{userId}
            AND CATEGORY LIKE '%'||#{category}||'%'
            AND ENTRANCE_STATUS LIKE '%'||#{entranceStatus}||'%'
            AND DELETED = 0
    </select>

    <select id="countAboutAll" parameterType="allPlanMapperRequest">
        SELECT COUNT(*) count
        FROM PLAN
        WHERE CATEGORY LIKE '%'||#{category}||'%'
          AND ENTRANCE_STATUS LIKE '%'||#{entranceStatus}||'%'
          AND DELETED = 0
    </select>

    <insert id="save" parameterType="planSaveMapperRequest">
        INSERT INTO PLAN(OFFICE, FLOOR, LOCATION, OPEN_DATE, CLOSE_DATE, BUSINESS_PLAN_URL, ENTRANCE_STATUS,
                         CONTACT_INFORMATION, CATEGORY, USER_ID)
        VALUES (#{office}, #{floor}, null, #{openDate}, #{closeDate}, #{businessPlanUrl}, #{entranceStatus},
                #{contactInformation}, #{category}, #{userId})
        <selectKey keyProperty="planId" resultType="long" order="AFTER">
            SELECT NVL(MAX(ID), 0)
            FROM PLAN
        </selectKey>
    </insert>

    <update id="updateEntranceStatus" parameterType="planUpdateEntranceStatusMapperRequest">
        UPDATE PLAN
        SET ENTRANCE_STATUS = #{entranceStatus}
            , MODIFIED_DATE = sysdate
        WHERE ID = #{id}
    </update>

    <delete id="deleteAll">
        DELETE
        FROM PLAN
    </delete>

    <sql id="offsetForPaging">
        OFFSET #{pageNo} ROWS FETCH NEXT #{amount} ROWS ONLY
    </sql>

    <!--
    나의 사업계획서 불러오기
    @Author 이상민
    -->
    <select id="findByMyPlan" parameterType="long" resultType="com.oya.kr.popup.mapper.dto.response.MyPlanMapperResponse">
        SELECT ID, OFFICE, FLOOR, LOCATION, OPEN_DATE, CLOSE_DATE, BUSINESS_PLAN_URL, ENTRANCE_STATUS,
               CONTACT_INFORMATION, CATEGORY, USER_ID, CREATED_DATE
        FROM PLAN
        WHERE ID = #{id} AND DELETED = 0
    </select>

</mapper>
