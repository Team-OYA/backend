<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oya.kr.user.mapper.UserMapper">

    <insert id="insertUser" parameterType="SignupUserRequest">
        {call create_user_and_business(
                #{nickname, mode=IN, jdbcType=VARCHAR},
                #{email, mode=IN, jdbcType=VARCHAR},
                #{password, mode=IN, jdbcType=VARCHAR},
                TO_DATE('${birthDate}', 'YYYY-MM-DD'),
                #{gender, mode=IN, jdbcType=VARCHAR},
                #{registrationType, mode=IN, jdbcType=VARCHAR},
                #{userType, mode=IN, jdbcType=VARCHAR},
                #{businessRegistrationNumber, mode=IN, jdbcType=VARCHAR},
                #{profileUrl, mode=IN, jdbcType=VARCHAR},
                #{nameOfCompany, mode=IN, jdbcType=VARCHAR},
                #{nameOfRepresentative, mode=IN, jdbcType=VARCHAR},
                TO_DATE('${dateOfBusinessCommencement}', 'YYYY-MM-DD'),
                #{businessItem, mode=IN, jdbcType=VARCHAR},
                #{connectedNumber, mode=IN, jdbcType=VARCHAR},
                #{faxNumber, mode=IN, jdbcType=VARCHAR},
                #{zipCode, mode=IN, jdbcType=VARCHAR},
                #{businessAddress, mode=IN, jdbcType=VARCHAR}
              )}
    </insert>

    <insert id="insertAdminAndKakaoUser" parameterType="signupBasicMapperRequest">
        INSERT INTO users (EMAIL, NICKNAME, PASSWORD, BIRTH_DATE, GENDER, REGISTRATION_TYPE, USER_TYPE, PROFILE_URL)
        VALUES (#{email},
                #{nickname},
                #{password, jdbcType=VARCHAR},
                #{birthDate, jdbcType=DATE},
                #{gender, jdbcType=VARCHAR},
                #{registrationType, jdbcType=VARCHAR},
                #{userType, jdbcType=VARCHAR},
                #{profileUrl, jdbcType=VARCHAR})
    </insert>

    <select id="duplicatedEmail" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM USERS
        WHERE EMAIL = #{email}
    </select>

    <select id="duplicatedNickname" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM USERS
        WHERE NICKNAME = #{email}
    </select>

    <select id="findByEmail" resultType="userMapperResponse">
        SELECT ID,
               NICKNAME,
               EMAIL,
               PASSWORD,
               BIRTH_DATE,
               GENDER,
               REGISTRATION_TYPE,
               USER_TYPE,
               BUSINESS_REGISTRATION_NUMBER,
               PROFILE_URL,
               CREATED_DATE,
               MODIFIED_DATE,
               DELETED
        FROM USERS
        WHERE EMAIL = #{email}
    </select>

    <delete id="deleteAll">
        DELETE
        FROM USERS
    </delete>

    <select id="findById" resultType="userMapperResponse">
        SELECT ID,
               NICKNAME,
               EMAIL,
               PASSWORD,
               BIRTH_DATE,
               GENDER,
               REGISTRATION_TYPE,
               USER_TYPE,
               BUSINESS_REGISTRATION_NUMBER,
               PROFILE_URL,
               CREATED_DATE,
               MODIFIED_DATE,
               DELETED
        FROM USERS
        WHERE ID = #{userId}
    </select>

    <delete id="deleteFromUserId">
        DELETE FROM USERS
        WHERE ID = #{userId}
    </delete>

    <resultMap id="AdminMapperResult" type="com.oya.kr.user.mapper.dto.response.AdminMapperResponse">
        <id property="userId" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="birthDate" column="birth_date"/>
        <result property="gender" column="gender"/>
        <result property="registrationType" column="registration_type"/>
        <result property="userType" column="user_type"/>
        <result property="businessRegistrationNumber" column="business_registration_number"/>
        <result property="profileUrl" column="profile_url"/>
        <result property="usersCreatedDate" column="created_date"/>
        <result property="usersModifiedDate" column="modified_date"/>
        <result property="deleted" column="deleted"/>

        <!-- Business fields -->
        <result property="businessId" column="id"/>
        <result property="nameOfCompany" column="name_of_company"/>
        <result property="nameOfRepresentative" column="name_of_representative"/>
        <result property="dateOfBusinessCommencement" column="date_of_business_commencement"/>
        <result property="businessItem" column="businessitem"/>
        <result property="connectedNumber" column="connected_number"/>
        <result property="faxNumber" column="fax_number"/>
        <result property="zipCode" column="zip_code"/>
        <result property="businessAddress" column="business_address"/>
    </resultMap>

    <select id="readUsers" resultMap="AdminMapperResult">
        SELECT
            U.ID,
            U.NICKNAME,
            U.EMAIL,
            U.PASSWORD,
            U.BIRTH_DATE,
            U.GENDER,
            U.REGISTRATION_TYPE,
            U.USER_TYPE,
            U.BUSINESS_REGISTRATION_NUMBER,
            U.PROFILE_URL,
            U.CREATED_DATE,
            U.MODIFIED_DATE,
            U.DELETED,
            B.ID,
            B.NAME_OF_COMPANY,
            B.NAME_OF_REPRESENTATIVE,
            B.DATE_OF_BUSINESS_COMMENCEMENT,
            B.BUSINESSITEM,
            B.CONNECTED_NUMBER,
            B.FAX_NUMBER,
            B.ZIP_CODE,
            B.BUSINESS_ADDRESS
        FROM
            USERS U
                LEFT JOIN BUSINESS B ON U.ID = B.USER_ID
    </select>

</mapper>
