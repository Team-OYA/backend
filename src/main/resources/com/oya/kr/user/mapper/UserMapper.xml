<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oya.kr.user.mapper.UserMapper">

    <resultMap id="userResultMap" type="com.oya.kr.user.domain.User">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="birthDate" column="birth_date"/>
        <result property="gender" column="gender"/>
        <result property="registrationType" column="registration_type"/>
        <result property="userType" column="user_type"/>
        <result property="businessRegistrationNumber" column="business_registration_number"/>
        <result property="profileUrl" column="profile_url"/>
        <result property="createDate" column="create_date"/>
        <result property="modifiedDate" column="modified_date"/>
        <result property="deleted" column="deleted"/>
    </resultMap>

    <insert id="insertUser" parameterType="com.oya.kr.user.service.dto.JoinRequestDto">
        INSERT INTO USERS (
        NICKNAME, EMAIL, PASSWORD, BIRTH_DATE, GENDER, REGISTRATION_TYPE,
        USER_TYPE, BUSINESS_REGISTRATION_NUMBER, PROFILE_URL
        )
        VALUES (
        #{joinRequest.nickname},
        #{joinRequest.email},
        #{joinRequest.password},
        TO_DATE(#{joinRequest.birthDate}, 'YYYYMMDD'),
        #{joinRequest.gender, jdbcType=INTEGER, typeHandler=com.oya.kr.user.domain.enums.Gender$TypeHandler},
        #{joinRequest.registrationType, jdbcType=INTEGER, typeHandler=com.oya.kr.user.domain.enums.RegistrationType$TypeHandler},
        #{joinRequest.userType, typeHandler=com.oya.kr.user.domain.enums.UserType$TypeHandler},
        #{joinRequest.businessRegistrationNumber, jdbcType=VARCHAR},
        #{joinRequest.profileUrl, jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertBusiness" >

    </insert>

    <select id="duplicatedEmail" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM USERS WHERE EMAIL = #{email}
    </select>

    <select id="duplicatedNickname" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM USERS WHERE NICKNAME = #{email}
    </select>

    <select id="findByEmail" resultMap="userResultMap">
        SELECT * FROM USERS
        WHERE email = #{email}
    </select>
</mapper>