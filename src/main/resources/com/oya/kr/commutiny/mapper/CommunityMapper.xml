<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oya.kr.commutiny.mapper.CommunityMapper">

    <insert id="saveBasic" parameterType="saveBasicMapperRequest">
        INSERT INTO COMMUNITY(TITLE, DESCRIPTION, COMMUNITY_TYPE, WRITE_ID, POPUP_Id)
        VALUES (#{title},
                #{description},
                #{communityType},
                #{writeId},
                #{popupid})
        <selectKey keyProperty="postId" resultType="long" order="AFTER">
            SELECT NVL(MAX(ID), 0)
            FROM COMMUNITY
        </selectKey>
    </insert>

    <insert id="saveVote" parameterType="saveVoteMapperRequest">
        INSERT INTO VOTE(CONTENT, POST_ID)
        VALUES (#{content},#{postId})
    </insert>

    <select id="getCommunityById" resultType="communityBasicMapperResponse">
        SELECT
            ID,
            TITLE,
            DESCRIPTION,
            COMMUNITY_TYPE,
            WRITE_ID,
            POPUP_Id,
            CREATED_DATE,
            MODIFIED_DATE,
            DELETED
        FROM
            COMMUNITY
        WHERE
            id = #{communityId}
    </select>

    <select id="getVoteInfo" resultType="voteResponse">
        SELECT
            VOTE.ID AS vote_id,
            VOTE.CONTENT AS content,
            VOTE.CREATED_DATE AS voteCreatedDate,
            COUNT(VOTE_CHECK.VOTE_ID) AS voteSum
        FROM VOTE
                 LEFT JOIN VOTE_CHECK ON VOTE.ID = VOTE_CHECK.VOTE_ID
        WHERE POST_ID = #{postId}
        GROUP BY VOTE.ID, VOTE.CREATED_DATE, VOTE_CHECK.VOTE_ID, VOTE.CONTENT
    </select>

    <select id="checkUserVote" resultType="java.lang.String">
        SELECT
            CASE WHEN COUNT(*) > 0 THEN 'true' ELSE 'false' END AS Result
        FROM VOTE_CHECK
        WHERE VOTE_ID = #{voteId} AND SELECTED_USER_ID = #{userId}
    </select>

    <update id="delete">
        UPDATE COMMUNITY
        SET DELETED = '1'
        WHERE ID = #{communityId}
    </update>

    <select id="findByAll" resultType="communityBasicMapperResponse">
        SELECT
            ID,
            TITLE,
            DESCRIPTION,
            COMMUNITY_TYPE,
            WRITE_ID,
            POPUP_Id,
            CREATED_DATE,
            MODIFIED_DATE,
            DELETED
        FROM
            COMMUNITY
        WHERE
            DELETED = #{deleted}
        ORDER BY MODIFIED_DATE
    </select>

    <select id="findByType" parameterType="readCommunityMapperRequest" resultType="communityBasicMapperResponse">
        SELECT
            c.ID,
            TITLE,
            DESCRIPTION,
            COMMUNITY_TYPE,
            WRITE_ID,
            POPUP_Id,
            c.CREATED_DATE,
            c.MODIFIED_DATE,
            c.DELETED
        FROM
            COMMUNITY c
                LEFT JOIN USERS u
                          on c.WRITE_ID = u.ID
        WHERE
            c.DELETED = #{deleted}
          AND u.USER_TYPE = #{userType}
        ORDER BY c.MODIFIED_DATE
    </select>

</mapper>
