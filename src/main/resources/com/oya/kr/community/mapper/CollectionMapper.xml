<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oya.kr.community.mapper.CollectionMapper">

    <!-- @author 이상민 -->
    <!-- @since 2024.02.20-->

    <insert id="save" parameterType="collectionMapperRequest">
        INSERT INTO COMMUNITY_COLLECTION(COMMUNITY_ID, USER_ID)
        VALUES (#{communityId}, #{userId})
    </insert>

    <select id="check" parameterType="collectionMapperRequest" resultType="java.lang.Integer">
        SELECT COUNT(ID)
        FROM COMMUNITY_COLLECTION
        WHERE COMMUNITY_ID = #{communityId} AND USER_ID = #{userId}
    </select>

    <select id="isDeleted" parameterType="collectionMapperRequest" resultType="java.lang.Boolean">
        SELECT DELETED
        FROM COMMUNITY_COLLECTION
        WHERE COMMUNITY_ID = #{communityId} AND USER_ID = #{userId}
    </select>

    <update id="delete" parameterType="collectionMapperRequest">
        UPDATE COMMUNITY_COLLECTION
        SET DELETED = #{isDeleted}
        WHERE COMMUNITY_ID = #{communityId} AND USER_ID = #{userId}
    </update>

    <!-- profile url 컬럼 추가  -->
    <!-- @author 김유빈 -->
    <!-- @since 2024.03.05-->
    <select id="findByAll" parameterType="readCollectionsMapperRequest" resultType="CommunityBasicWithProfileMapperResponse">
        SELECT
            c.ID,
            TITLE,
            DESCRIPTION,
            COMMUNITY_TYPE,
            WRITE_ID,
            CATEGORY_CODE,
            u.PROFILE_URL,
            c.CREATED_DATE,
            c.MODIFIED_DATE,
            c.DELETED,
            COUNT(cv.COMMUNITY_ID) as countView
        FROM
            COMMUNITY c
                LEFT JOIN USERS u on c.WRITE_ID = u.ID
                LEFT JOIN COMMUNITY_VIEW cv ON c.ID = cv.COMMUNITY_ID
                LEFT JOIN COMMUNITY_COLLECTION cc ON c.ID = cc.COMMUNITY_ID
                LEFT JOIN USERS u ON u.ID = c.WRITE_ID
        WHERE
            c.DELETED = #{communityDeleted}
          AND cc.DELETED = #{collectionDeleted}
          AND cc.USER_ID = #{userId}
        GROUP BY
            c.ID, TITLE, DESCRIPTION, COMMUNITY_TYPE, WRITE_ID, CATEGORY_CODE, u.PROFILE_URL, c.CREATED_DATE, c.MODIFIED_DATE, c.DELETED
        ORDER BY MODIFIED_DATE DESC
        OFFSET #{pageNo} ROWS FETCH NEXT #{amount} ROWS ONLY
    </select>

    <delete id="deleteByUserId">
        DELETE FROM COMMUNITY_COLLECTION
        WHERE USER_ID = #{userId}
    </delete>
</mapper>
