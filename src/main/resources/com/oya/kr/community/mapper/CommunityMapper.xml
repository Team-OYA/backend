<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oya.kr.community.mapper.CommunityMapper">

    <!-- @author 이상민 -->
    <!-- @since 2024.02.17-->

    <insert id="saveBasic" parameterType="saveBasicMapperRequest">
        INSERT INTO COMMUNITY(TITLE, DESCRIPTION, COMMUNITY_TYPE, WRITE_ID, CATEGORY_CODE)
        VALUES (#{title},
                #{description},
                #{communityType},
                #{writeId},
                #{categoryCode})
        <selectKey keyProperty="postId" resultType="long" order="AFTER">
            SELECT NVL(MAX(ID), 0)
            FROM COMMUNITY
        </selectKey>
    </insert>

    <insert id="saveVote" parameterType="saveVoteMapperRequest">
        INSERT INTO VOTE(CONTENT, POST_ID)
        VALUES (#{content},#{postId})
    </insert>

    <select id="findById" resultType="communityBasicMapperResponse">
        <include refid="selecCommunity" />
        FROM
            COMMUNITY c
                LEFT JOIN COMMUNITY_VIEW cv ON c.ID = cv.COMMUNITY_ID
        WHERE
            c.ID = #{communityId}
        GROUP BY
            c.ID, TITLE, DESCRIPTION, COMMUNITY_TYPE, WRITE_ID, CATEGORY_CODE, c.CREATED_DATE, c.MODIFIED_DATE, c.DELETED
    </select>

    <select id="findByAll" parameterType="readCommunityMapperRequest" resultType="communityBasicMapperResponse">
        <include refid="selecCommunity" />
        <![CDATA[
        FROM
            COMMUNITY c
                LEFT JOIN COMMUNITY_VIEW cv ON c.ID = cv.COMMUNITY_ID
        WHERE
            c.DELETED = #{deleted}
        GROUP BY
            c.ID, TITLE, DESCRIPTION, COMMUNITY_TYPE, WRITE_ID, CATEGORY_CODE, c.CREATED_DATE, c.MODIFIED_DATE, c.DELETED
        ORDER BY MODIFIED_DATE DESC
            ]]>
        <include refid="offsetForPaging" />
    </select>

    <select id="findByType" parameterType="readCommunityMapperRequest" resultType="communityBasicMapperResponse">
        <include refid="selecCommunity" />
        <![CDATA[
        FROM
            COMMUNITY c
                LEFT JOIN USERS u on c.WRITE_ID = u.ID
                LEFT JOIN COMMUNITY_VIEW cv ON c.ID = cv.COMMUNITY_ID
        WHERE
            c.DELETED = #{deleted}
          AND u.USER_TYPE = #{userType}
          AND cv.DELETED = #{deleted}
        GROUP BY
            c.ID, TITLE, DESCRIPTION, COMMUNITY_TYPE, WRITE_ID, CATEGORY_CODE, c.CREATED_DATE, c.MODIFIED_DATE, c.DELETED
        ORDER BY c.MODIFIED_DATE DESC
        ]]>
        <include refid="offsetForPaging" />
    </select>

    <update id="delete">
        UPDATE COMMUNITY
        SET DELETED = '1'
        WHERE ID = #{communityId}
    </update>

    <delete id="deleteByUserId">
        DELETE FROM COMMUNITY
        WHERE WRITE_ID = #{userId}
    </delete>

    <insert id="saveImage">
        INSERT INTO COMMUNITY_IMAGE (URL, COMMUNITY_ID)
        VALUES (#{imageUrl}, #{communityId})
    </insert>

    <select id="findByImage">
        SELECT URL
        FROM COMMUNITY_IMAGE
        WHERE COMMUNITY_ID = #{communityId}
    </select>

    <select id="statistics" resultType="statisticsResponseMapper">
        SELECT CATEGORY_CODE, COUNT(CATEGORY_CODE)
        FROM COMMUNITY
        GROUP BY CATEGORY_CODE
    </select>

    <select id="findSizeByAll" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM COMMUNITY
        WHERE DELETED = 0
    </select>

    <select id="findSizeByType" resultType="java.lang.Integer">
        SELECT COUNT(ID)
        FROM COMMUNITY
        WHERE COMMUNITY_TYPE = #{type}
            AND DELETED = 0
        GROUP BY ID
    </select>

    <select id="findSizeByCollection" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM COMMUNITY C
                 LEFT JOIN COMMUNITY_COLLECTION CC
                           ON C.ID = CC.COMMUNITY_ID
        Where CC.USER_ID = #{userId}
            AND C.DELETED = 0
            AND CC.DELETED = 0
    </select>

    <!--
    스크랩 여부 반환 추가

    @author 김유빈
    @since 2024.02.26
    -->
    <select id="existCollection" resultType="boolean">
        SELECT NVL2(CC.ID, 1, 0) COLLECTED
        FROM COMMUNITY C
        LEFT JOIN COMMUNITY_COLLECTION CC
            ON C.ID = CC.COMMUNITY_ID
                AND USER_ID = #{userId}
                AND CC.DELETED = 0
        WHERE C.ID = #{communityId}
            AND C.DELETED = 0
    </select>

    <sql id="selecCommunity">
        SELECT
            c.ID,
            TITLE,
            DESCRIPTION,
            COMMUNITY_TYPE,
            WRITE_ID,
            CATEGORY_CODE,
            c.CREATED_DATE,
            c.MODIFIED_DATE,
            c.DELETED,
            COUNT(cv.COMMUNITY_ID) as countView
    </sql>

    <sql id="offsetForPaging">
        OFFSET #{pageNo} ROWS FETCH NEXT #{amount} ROWS ONLY
    </sql>

</mapper>
